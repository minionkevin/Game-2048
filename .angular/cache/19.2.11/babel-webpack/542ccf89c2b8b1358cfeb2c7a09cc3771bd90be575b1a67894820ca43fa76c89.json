{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let ScoreService = /*#__PURE__*/(() => {\n  class ScoreService {\n    userService;\n    http;\n    platformId;\n    message = '';\n    currHighestScore = 0;\n    constructor(userService, http, platformId) {\n      this.userService = userService;\n      this.http = http;\n      this.platformId = platformId;\n    }\n    updateHighestScore() {\n      const score = this.getCurrHighScore();\n      const payload = {\n        username: this.userService.getUsername(),\n        score: score\n      };\n      this.http.post(`${environment.apiUrl}/update-score`, payload).subscribe({\n        next: response => {\n          console.log(response.message);\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n    setCurrHighScore(score) {\n      this.currHighestScore = score;\n    }\n    getCurrHighScore() {\n      return this.currHighestScore;\n    }\n    restartGame() {\n      this.currHighestScore = 0;\n      if (!isPlatformBrowser(this.platformId)) return;\n      localStorage.setItem('highestScore', this.currHighestScore.toString());\n    }\n    static ɵfac = function ScoreService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ScoreService)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(PLATFORM_ID));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ScoreService,\n      factory: ScoreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ScoreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}