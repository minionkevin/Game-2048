{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { BlockComponent } from '../block/block.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/board.service\";\nimport * as i4 from \"../services/score.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/tooltip\";\nconst _c0 = (a0, a1) => ({\n  top: a0,\n  left: a1\n});\nfunction GameBoardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 14);\n  }\n}\nfunction GameBoardComponent_ng_container_4_app_block_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-block\", 16);\n  }\n  if (rf & 2) {\n    const block_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction2(4, _c0, block_r1.xPos, block_r1.yPos));\n    i0.ɵɵproperty(\"blockCount\", block_r1.value)(\"index\", block_r1.index);\n  }\n}\nfunction GameBoardComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, GameBoardComponent_ng_container_4_app_block_1_Template, 1, 7, \"app-block\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const block_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", block_r1.shouldShow);\n  }\n}\nfunction GameBoardComponent_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function GameBoardComponent_Conditional_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleLogin());\n    });\n    i0.ɵɵtext(2, \"sign in\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameBoardComponent_Conditional_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function GameBoardComponent_Conditional_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.reloadGame());\n    });\n    i0.ɵɵtext(1, \"Reload\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameBoardComponent_Conditional_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\\uD83D\\uDC64 \", ctx_r2.userName, \"\");\n  }\n}\nfunction GameBoardComponent_Conditional_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDC64 0.o\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameBoardComponent_Conditional_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\\u2B50 \", ctx_r2.scoreService.getCurrHighScore(), \"\");\n  }\n}\nfunction GameBoardComponent_Conditional_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u2B50 0\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let GameBoardComponent = /*#__PURE__*/(() => {\n  class GameBoardComponent {\n    router;\n    userService;\n    boardService;\n    scoreService;\n    platformId;\n    constructor(router, userService, boardService, scoreService, platformId) {\n      this.router = router;\n      this.userService = userService;\n      this.boardService = boardService;\n      this.scoreService = scoreService;\n      this.platformId = platformId;\n    }\n    cells = [];\n    sidebarOpen = false;\n    debugInputIndex = 0;\n    debugInputValue = 2;\n    userName = null;\n    shoudLoad = false;\n    ngOnInit() {\n      this.setupEvent();\n      this.boardService.setBoardState(false);\n      this.boardService.initGame();\n      this.cells = new Array(this.boardService.getBoardSize()).fill(0);\n    }\n    setupEvent() {\n      this.userService.username$.subscribe(name => {\n        this.userName = name;\n      });\n      this.boardService.gameOver$.subscribe(() => {\n        this.gameOver();\n      });\n    }\n    handlePlayerInput(event) {\n      switch (event.key) {\n        case 'ArrowUp':\n          this.boardService.moveBlocks('up');\n          break;\n        case 'ArrowDown':\n          this.boardService.moveBlocks('down');\n          break;\n        case 'ArrowLeft':\n          this.boardService.moveBlocks('left');\n          break;\n        case 'ArrowRight':\n          this.boardService.moveBlocks('right');\n          break;\n      }\n    }\n    showDebug() {\n      console.log(this.boardService.blockData);\n    }\n    gameOver() {\n      this.router.navigate(['/game-over'], {});\n    }\n    playerSignOut() {\n      if (!isPlatformBrowser(this.platformId)) return;\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      this.userService.cleanUsername();\n    }\n    reloadGame() {\n      if (!isPlatformBrowser(this.platformId)) return;\n      this.boardService.loadPlayerState(Number(localStorage.getItem('playerId')));\n      this.shoudLoad = true;\n    }\n    toggleSidebar() {\n      this.sidebarOpen = !this.sidebarOpen;\n    }\n    handleLogin() {\n      this.router.navigate(['/login']);\n    }\n    restart() {\n      this.boardService.setBoardState(false);\n      this.router.navigate(['/game-board']);\n      console.log(\"restart\");\n    }\n    static ɵfac = function GameBoardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GameBoardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.BoardService), i0.ɵɵdirectiveInject(i4.ScoreService), i0.ɵɵdirectiveInject(PLATFORM_ID));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GameBoardComponent,\n      selectors: [[\"app-game-board\"]],\n      hostBindings: function GameBoardComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function GameBoardComponent_keydown_HostBindingHandler($event) {\n            return ctx.handlePlayerInput($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      decls: 29,\n      vars: 15,\n      consts: [[1, \"game-page\"], [1, \"board\"], [1, \"grid-content\"], [\"class\", \"cell\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"button-container\"], [1, \"toggle-btn\", 3, \"click\"], [1, \"sidebar\"], [1, \"sidebar-content\"], [1, \"basic-button\", 3, \"click\"], [1, \"basic-button\"], [\"type\", \"number\", \"matTooltip\", \"Input spawn position index\", \"matTooltipPosition\", \"right\", 1, \"basic-input\", 3, \"ngModelChange\", \"min\", \"max\", \"ngModel\"], [\"type\", \"number\", \"matTooltip\", \"Input spawn value\", \"matTooltipPosition\", \"right\", 1, \"basic-input\", 3, \"ngModelChange\", \"ngModel\"], [1, \"user-info\"], [1, \"cell\"], [3, \"blockCount\", \"index\", \"style\", 4, \"ngIf\"], [3, \"blockCount\", \"index\"], [\"matTooltip\", \" SAVE GAME ANYTIME\", 1, \"basic-button\", 3, \"click\"]],\n      template: function GameBoardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtemplate(3, GameBoardComponent_div_3_Template, 1, 0, \"div\", 3)(4, GameBoardComponent_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, GameBoardComponent_Conditional_5_Template, 3, 0, \"div\", 5);\n          i0.ɵɵelementStart(6, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_6_listener() {\n            return ctx.toggleSidebar();\n          });\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"ul\")(11, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_11_listener() {\n            return ctx.showDebug();\n          });\n          i0.ɵɵtext(12, \"Print Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_13_listener() {\n            return ctx.boardService.addRandomBlock();\n          });\n          i0.ɵɵtext(14, \"Spawn Random\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_15_listener() {\n            return ctx.gameOver();\n          });\n          i0.ɵɵtext(16, \"GameOver\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_17_listener() {\n            return ctx.playerSignOut();\n          });\n          i0.ɵɵtext(18, \"Sign Out\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, GameBoardComponent_Conditional_19_Template, 2, 0, \"button\", 10);\n          i0.ɵɵelementStart(20, \"input\", 11);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GameBoardComponent_Template_input_ngModelChange_20_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.debugInputIndex, $event) || (ctx.debugInputIndex = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 12);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function GameBoardComponent_Template_input_ngModelChange_21_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.debugInputValue, $event) || (ctx.debugInputValue = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GameBoardComponent_Template_button_click_22_listener() {\n            return ctx.boardService.addBlockToPos(ctx.debugInputIndex, ctx.debugInputValue);\n          });\n          i0.ɵɵtext(23, \"SubmitPos\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 13);\n          i0.ɵɵtemplate(25, GameBoardComponent_Conditional_25_Template, 2, 1, \"div\")(26, GameBoardComponent_Conditional_26_Template, 2, 0, \"div\")(27, GameBoardComponent_Conditional_27_Template, 2, 1, \"div\")(28, GameBoardComponent_Conditional_28_Template, 2, 0, \"div\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cells);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.boardService.blockData);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(!ctx.userService.getUsername() ? 5 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"open\", ctx.sidebarOpen);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.sidebarOpen ? \"\\u2715\" : \">\", \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"open\", ctx.sidebarOpen);\n          i0.ɵɵadvance(11);\n          i0.ɵɵconditional(ctx.userService.getUsername() ? 19 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"min\", 0)(\"max\", 15);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.debugInputIndex);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.debugInputValue);\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(ctx.userName != null ? 25 : 26);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.scoreService.getCurrHighScore() ? 27 : 28);\n        }\n      },\n      dependencies: [BlockComponent, CommonModule, i5.NgForOf, i5.NgIf, FormsModule, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.NgControlStatus, i6.MinValidator, i6.MaxValidator, i6.NgModel, MatTooltipModule, i7.MatTooltip],\n      styles: [\".game-page[_ngcontent-%COMP%]{margin:20px}.board[_ngcontent-%COMP%]{position:relative;display:grid;grid-template-columns:repeat(4,100px);grid-template-rows:repeat(4,100px);gap:10px;background-color:#bbada0;padding:10px;border-radius:10px;width:max-content;margin:auto}.grid-content[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(4,100px);grid-template-rows:repeat(4,100px);gap:10px}.cell[_ngcontent-%COMP%]{width:100px;height:100px;background-color:#cdc1b4;border-radius:12px;position:relative}.button-container[_ngcontent-%COMP%]{width:max-content;margin:auto;padding-top:20px}.debug[_ngcontent-%COMP%]{margin-top:15px;padding:12px;background-color:gray;display:grid;grid-template-columns:repeat(6,100px);grid-template-rows:repeat(2,100px);gap:15px}.sidebar[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:220px;height:100vh;background-color:#fff6e5;color:#6b4226;transform:translate(-220px);transition:transform .3s ease;box-shadow:2px 0 10px #0003;z-index:998}.sidebar.open[_ngcontent-%COMP%]{transform:translate(0)}.sidebar-content[_ngcontent-%COMP%]{padding:20px;position:relative}.sidebar-content[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;display:flex;flex-direction:column;flex:auto;gap:10px}.sidebar-content[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:15px}.sidebar-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;color:#8b5e3c;font-size:1.2rem}.sidebar-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#d94f30}.toggle-btn[_ngcontent-%COMP%]{position:fixed;top:20px;left:0;z-index:999;width:30px;height:60px;background-color:#8b5e3c;color:#fff;border:none;border-radius:0 5px 5px 0;font-size:1.2rem;cursor:pointer;transition:left .3s ease}.toggle-btn.open[_ngcontent-%COMP%]{left:220px}.basic-button[_ngcontent-%COMP%]{background-color:#8b5e3c;border:none;color:#fff;font-size:1.1rem;padding:12px 24px;border-radius:6px;cursor:pointer;transition:background-color .3s ease}.basic-input[_ngcontent-%COMP%]{padding:10px 15px;border:2px solid #8b5e3c;border-radius:5px;font-size:1rem;outline:none;background-color:#fff;color:#8b5e3c;transition:all .3s ease}.basic-input[_ngcontent-%COMP%]::placeholder{color:#aaa;font-style:italic}.user-info[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;width:100%;background-color:#fff6e5;display:flex;flex-direction:column;gap:5px}.user-info[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{padding:10px 15px;border:2px solid #8b5e3c;border-radius:5px}\"]\n    });\n  }\n  return GameBoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}